---
const { href, themeColor, to } = Astro.props;

const isInternal = !!to;
const Tag = isInternal ? 'a' : 'a';
const linkProps = isInternal ? { href: to } : { href };
---

<div class="button-holder">
  <Tag {...linkProps} class="button">
    <slot />
  </Tag>
  <span class="shadow" style={`background-color: ${themeColor}`}></span>
</div>

<style>
  .button-holder {
    position: relative;
    width: fit-content;
    height: 48px;
    z-index: 1;
    margin-top: var(--space-16);
    margin-bottom: var(--space-16);
  }

  .button {
    display: block;
    color: var(--color-grey-800);
    position: relative;
    font-weight: 700;
    text-decoration: none;
    background-color: white;
    border: 1px solid var(--color-grey-800);
    padding: 8px var(--space-24);
    transition: all 250ms cubic-bezier(0.19, 1, 0.22, 1);
    height: 44px;
  }

  .button:hover {
    transform: translate(6px, 6px);
    cursor: pointer;
  }

  .shadow {
    background-color: white;
    position: absolute;
    z-index: -1;
    right: -6px;
    bottom: -2px;
    border: 1px solid var(--color-grey-800);
    width: 100%;
    height: 44px;
  }
</style>
